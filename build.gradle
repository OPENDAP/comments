
// The 'buildscript' block holds what gradle needs to run the build script
buildscript {
    repositories {
        //Required repos
        mavenCentral()
    }
    dependencies {
        //Required dependency for spring-boot plugin
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE'
    }
}

plugins {
	id 'java'
	id 'war'
	id 'eclipse'
    id 'idea'

	// See https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/
	// for information about features of the org.springframework.boot plugin.
	id 'org.springframework.boot' version '2.1.0.RELEASE'

	// Using 'io.spring.dependency-management' would make it so that the 
	// versions could be left off of the dependencies.
	id "io.spring.dependency-management" version "1.0.6.RELEASE"
}

group = 'org.opendap'
version = '0.2.0-SNAPSHOT'

description = """feedback"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    compile group: 'org.springframework', name: 'spring-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    // compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb'
    
    // Added tomcat-embed-jasper and jstl for jsp view support. jhrg 11/7/18
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper'
    compile group: 'javax.servlet', name: 'jstl'

    // Add SLF4j. http://makble.com/gradle-slf4j-integration-example-with-eclipse
    // NB: By using 'spring-boot-starter' above, ch.qos.logback is included automatically,
    // which will conflict with these simpler implementations. I wanted to see how hard it
    // would be to deviate from the stock sprint boot tools (about 2 hours...). Also see 
    // the exclude configuration below, which is needed. jhrg 11/6/18
    compile group: 'org.slf4j', name:'slf4j-api'
    compile group: 'org.slf4j', name:'slf4j-simple'
    
    // A slightly less simple slf4j impl that still uses a properties file. jhrg 11/7/18
    // compile group: 'org.slf4j', name:'slf4j-log4j12'
    
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    
    // These are not needed when a war file is run inside tomcat. Marking these 
    // as 'provided at runtime' does not break the 'bootRun' target.
    providedRuntime group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'
    providedRuntime group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper'
}

configurations {
    all {
        // Exclude the '...starter-loggin' stuff if you want to use something other than
        // the ch.qos.Logback code. Without this, there will be errors about having two
        // conflicting implementations of slf4j. jhrg 11/7/18
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

// When using the plugin org.springframework.boot, the jar and war tasks are
// disabled by default in favor of the bootJar/bootWar tasks. This section enables
// them and adds '-boot' to the name of the bootable jar/war files, so that 
// the jar and bootJar don't over write each other (same for war/bootWar). jhrg 11/5/18
// 
// I don't think we need the plain jar file... jhrg 11/8/18
//jar {
//	enabled = true
//}
//
//bootJar {
//	classifier = 'boot'
//}

war {
	enabled = true
}

bootWar {
	classifier = 'boot'
}

